{"version":3,"file":"static/js/445.361e662c.chunk.js","mappings":"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","sources":["helpers/iconify/iconify.jsx","utils/format-time.js","utils/format-number.js","helpers/svg-color/svg-color.jsx","components/Comments/CommentList.jsx","components/Comments/CommentModal.jsx","hooks/useComments.js","components/Posts/PostCard.jsx","components/Posts/PostList.jsx","components/TagFilter/TagFilter.jsx","components/Posts/PostContainer.jsx","hooks/usePosts.js","pages/PostsPage.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport { forwardRef } from 'react';\r\nimport { Icon } from '@iconify/react';\r\n\r\nimport Box from '@mui/material/Box';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst Iconify = forwardRef(({ icon, width = 20, sx, ...other }, ref) => (\r\n  <Box\r\n    ref={ref}\r\n    component={Icon}\r\n    className=\"component-iconify\"\r\n    icon={icon}\r\n    sx={{ width, height: width, ...sx }}\r\n    {...other}\r\n  />\r\n));\r\n\r\nIconify.propTypes = {\r\n  icon: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\r\n  sx: PropTypes.object,\r\n  width: PropTypes.number,\r\n};\r\n\r\nexport default Iconify;","import { format, getTime, formatDistanceToNow } from 'date-fns';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function fDate(date, newFormat) {\r\n  const fm = newFormat || 'dd MMM yyyy';\r\n\r\n  return date ? format(new Date(date), fm) : '';\r\n}\r\n\r\nexport function fDateTime(date, newFormat) {\r\n  const fm = newFormat || 'dd MMM yyyy p';\r\n\r\n  return date ? format(new Date(date), fm) : '';\r\n}\r\n\r\nexport function fTimestamp(date) {\r\n  return date ? getTime(new Date(date)) : '';\r\n}\r\n\r\nexport function fToNow(date) {\r\n  return date\r\n    ? formatDistanceToNow(new Date(date), {\r\n        addSuffix: true,\r\n      })\r\n    : '';\r\n}","import numeral from 'numeral';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function fNumber(number) {\r\n  return numeral(number).format();\r\n}\r\n\r\nexport function fCurrency(number) {\r\n  const format = number ? numeral(number).format('$0,0.00') : '';\r\n\r\n  return result(format, '.00');\r\n}\r\n\r\nexport function fPercent(number) {\r\n  const format = number ? numeral(Number(number) / 100).format('0.0%') : '';\r\n\r\n  return result(format, '.0');\r\n}\r\n\r\nexport function fShortenNumber(number) {\r\n  const format = number ? numeral(number).format('0.00a') : '';\r\n\r\n  return result(format, '.00');\r\n}\r\n\r\nexport function fData(number) {\r\n  const format = number ? numeral(number).format('0.0 b') : '';\r\n\r\n  return result(format, '.0');\r\n}\r\n\r\nfunction result(format, key = '.00') {\r\n  const isInteger = format.includes(key);\r\n\r\n  return isInteger ? format.replace(key, '') : format;\r\n}","import PropTypes from 'prop-types';\r\nimport { forwardRef } from 'react';\r\nimport Box from '@mui/material/Box';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst SvgColor = forwardRef(({ src, sx, ...other }, ref) => (\r\n  <Box\r\n    component=\"span\"\r\n    className=\"svg-color\"\r\n    ref={ref}\r\n    sx={{\r\n      width: 24,\r\n      height: 24,\r\n      display: 'inline-block',\r\n      bgcolor: 'currentColor',\r\n      mask: `url(${src}) no-repeat center / contain`,\r\n      WebkitMask: `url(${src}) no-repeat center / contain`,\r\n      ...sx,\r\n    }}\r\n    {...other}\r\n  />\r\n));\r\n\r\nSvgColor.propTypes = {\r\n  src: PropTypes.string,\r\n  sx: PropTypes.object,\r\n};\r\n\r\nexport default SvgColor;","// src/components/CommentList.js\r\nimport React from \"react\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { fDate } from \"../../utils/format-time\";\r\n\r\nconst CommentList = ({ comments, status }) => {\r\n  if (status === \"loading\") {\r\n    return <CircularProgress />;\r\n  }\r\n\r\n  if (status === \"failed\") {\r\n    return <Typography variant=\"body1\">Failed to load comments.</Typography>;\r\n  }\r\n\r\n  if (status === \"succeeded\" && comments.length === 0) {\r\n    return <Typography variant=\"body1\">No hay comentarios.</Typography>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {comments.map((comment, index) => (\r\n        <div key={index}>\r\n          <ListItem alignItems=\"flex-start\">\r\n            <ListItemAvatar>\r\n              <Avatar alt=\"Remy Sharp\" src={comment.owner.picture} />\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary={comment.owner.firstName}\r\n              secondary={\r\n                <React.Fragment>\r\n                  <Typography\r\n                    sx={{ display: \"inline\" }}\r\n                    component=\"span\"\r\n                    variant=\"body2\"\r\n                    color=\"text.primary\"\r\n                  >\r\n                    {comment.message}\r\n                  </Typography>\r\n                </React.Fragment>\r\n              }\r\n            />\r\n            <Typography\r\n              sx={{ display: \"inline\" }}\r\n              component=\"span\"\r\n              variant=\"body2\"\r\n              color=\"text.primary\"\r\n            >\r\n              {fDate(comment.publishDate)}\r\n            </Typography>\r\n          </ListItem>\r\n          {index + 1 < comments.length && (\r\n            <Divider variant=\"inset\" component=\"li\" />\r\n          )}\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CommentList;\r\n","// src/components/CommentModal.js\r\nimport React from \"react\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport { useComments } from \"../../hooks/useComments\";\r\nimport CommentList from \"./CommentList\";\r\nimport PropTypes from \"prop-types\";\r\nimport List from \"@mui/material/List\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"0.5px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nconst CommentModal = ({ isOpen, onClose, postId }) => {\r\n  const { comments, status } = useComments(postId, isOpen);\r\n\r\n  return (\r\n    <Modal\r\n      open={isOpen}\r\n      onClose={onClose}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n     <List sx={style}>\r\n        <CommentList comments={comments} status={status} />\r\n      </List>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nCommentModal.propTypes = {\r\n  isOpen: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  postId: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default CommentModal;\r\n","// src/hooks/useComments.js\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  fetchCommentsByPostId,\r\n  selectCommentsByPostId,\r\n  selectCommentsStatusByPostId,\r\n} from \"../features/commentSlice\";\r\n\r\nexport const useComments = (postId, isOpen) => {\r\n  const dispatch = useDispatch();\r\n  const comments = useSelector((state) => selectCommentsByPostId(state, postId));\r\n  const status = useSelector((state) => selectCommentsStatusByPostId(state, postId));\r\n  const [loadedComments, setLoadedComments] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isOpen && !loadedComments) {\r\n      dispatch(fetchCommentsByPostId(postId));\r\n      setLoadedComments(true);\r\n    }\r\n  }, [dispatch, isOpen, postId, loadedComments]);\r\n\r\n  return {\r\n    comments,\r\n    status,\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport { alpha } from \"@mui/material/styles\";\r\nimport Grid from \"@mui/material/Unstable_Grid2\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { fDate } from \"../../utils/format-time\";\r\nimport { fShortenNumber } from \"../../utils/format-number\";\r\nimport Iconify from \"../../helpers/iconify/iconify\";\r\nimport SvgColor from \"../../helpers/svg-color/svg-color\";\r\nimport CommentModal from \"../Comments/CommentModal\"; // Importar el componente modal aquí\r\n\r\nexport default function PostCard({ post }) {\r\n  const { id, owner, image, text, publishDate, likes } = post;\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  const toggleModal = () => {\r\n    setModalOpen(!modalOpen);\r\n  };\r\n\r\n  const renderAvatar = (\r\n    <Avatar\r\n      alt={owner.firstName}\r\n      src={owner.picture}\r\n      sx={{\r\n        position: \"absolute\",\r\n        bottom: (theme) => theme.spacing(-2),\r\n        zIndex: 9,\r\n        top: 24,\r\n        left: 24,\r\n        width: 40,\r\n        height: 40,\r\n      }}\r\n    />\r\n  );\r\n\r\n  const renderCover = (\r\n    <Box\r\n      component=\"img\"\r\n      alt={text}\r\n      src={image}\r\n      sx={{\r\n        top: 0,\r\n        width: 1,\r\n        height: 1,\r\n        objectFit: \"cover\",\r\n        position: \"absolute\",\r\n      }}\r\n    />\r\n  );\r\n\r\n  const renderTitle = (\r\n    <Link\r\n      color=\"inherit\"\r\n      variant=\"subtitle2\"\r\n      underline=\"hover\"\r\n      sx={{\r\n        overflow: \"hidden\",\r\n        WebkitLineClamp: 2,\r\n        display: \"-webkit-box\",\r\n        WebkitBoxOrient: \"vertical\",\r\n        typography: \"h5\",\r\n        height: 60,\r\n        color: \"common.white\",\r\n      }}\r\n    >\r\n      {text}\r\n    </Link>\r\n  );\r\n\r\n  const renderInfo = (\r\n    <Stack\r\n      direction=\"row\"\r\n      justifyContent=\"space-between\" // Cambiar a 'space-between' para alinear los elementos en los extremos\r\n      flexWrap=\"wrap\"\r\n      spacing={1.5}\r\n      sx={{\r\n        mt: 3,\r\n        color: \"text.disabled\",\r\n      }}\r\n    >\r\n      {/* Fecha */}\r\n      <Typography\r\n        variant=\"caption\"\r\n        sx={{\r\n          opacity: 0.48,\r\n          color: \"common.white\",\r\n        }}\r\n      >\r\n        {fDate(publishDate)}\r\n      </Typography>\r\n  \r\n      {/* Iconos de comentarios y likes */}\r\n      <Stack direction=\"row\" spacing={1.5}>\r\n        {/* Comentarios */}\r\n        <Stack\r\n          direction=\"row\"\r\n          onClick={toggleModal}\r\n          sx={{\r\n            opacity: 0.48,\r\n            color: \"common.white\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          <Iconify width={16} icon=\"eva:message-circle-fill\" sx={{ mr: 0.5 }} />\r\n          <Typography variant=\"caption\">comments</Typography>\r\n        </Stack>\r\n  \r\n        {/* Likes */}\r\n        <Stack direction=\"row\" sx={{ opacity: 0.48, color: \"common.white\" }}>\r\n          <Iconify width={16} icon=\"mdi:heart\" sx={{ mr: 0.5 }} />\r\n          <Typography variant=\"caption\">{fShortenNumber(likes)}</Typography>\r\n        </Stack>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n  \r\n\r\n  const renderName = (\r\n    <Typography\r\n      variant=\"caption\"\r\n      component=\"div\"\r\n      sx={{\r\n        mb: 2,\r\n        opacity: 0.48,\r\n        color: \"common.white\",\r\n      }}\r\n    >\r\n      {owner.firstName}\r\n    </Typography>\r\n  );\r\n\r\n  const renderShape = (\r\n    <SvgColor\r\n      color=\"paper\"\r\n      src=\"/assets/icons/shape-avatar.svg\"\r\n      sx={{\r\n        width: 80,\r\n        height: 36,\r\n        zIndex: 9,\r\n        bottom: -15,\r\n        position: \"absolute\",\r\n        color: \"background.paper\",\r\n        display: \"none\",\r\n      }}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <Grid item xs={12} sm={6} md={4}>\r\n      <Card>\r\n        <Box\r\n          sx={{\r\n            position: \"relative\",\r\n            \"&:after\": {\r\n              top: 0,\r\n              content: \"''\",\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              position: \"absolute\",\r\n              bgcolor: (theme) => alpha(theme.palette.grey[900], 0.72),\r\n            },\r\n            pt: {\r\n              xs: \"calc(100% * 4 / 3)\",\r\n              sm: \"calc(100% * 3 / 4.66)\",\r\n            },\r\n          }}\r\n        >\r\n          {renderShape}\r\n          {renderAvatar}\r\n          {renderCover}\r\n          <Box\r\n            onClick={toggleModal} // Aquí se abre el modal al hacer clic\r\n            sx={{\r\n              position: \"absolute\",\r\n              bottom: 0,\r\n              left: 0,\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              bgcolor: \"transparent\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          />\r\n        </Box>\r\n\r\n        <Box\r\n          sx={{\r\n            p: (theme) => theme.spacing(4, 3, 3, 3),\r\n            width: 1,\r\n            bottom: 0,\r\n            position: \"absolute\",\r\n          }}\r\n        >\r\n          {renderName}\r\n          {renderTitle}\r\n          {renderInfo}\r\n        </Box>\r\n      </Card>\r\n\r\n      <CommentModal isOpen={modalOpen} onClose={toggleModal} postId={id} />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nPostCard.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n};\r\n","\r\nimport React from \"react\";\r\nimport Grid from \"@mui/material/Unstable_Grid2\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport PostCard from \"./PostCard\";\r\nimport { CircularProgress } from \"@mui/material\";\r\n\r\nconst PostList = ({ posts, postsStatus, filteredPosts }) => {\r\n  return (\r\n    <Grid container spacing={3}>\r\n      {postsStatus === \"loading\" && <CircularProgress />}\r\n      {postsStatus === \"failed\" && (\r\n        <Typography variant=\"h6\">\r\n          Failed to load posts. Please try again later.\r\n        </Typography>\r\n      )}\r\n      {postsStatus === \"succeeded\" && posts.length === 0 && (\r\n        <Typography variant=\"h6\">No posts available.</Typography>\r\n      )}\r\n      {(postsStatus === \"succeeded\" || postsStatus === \"connected\") &&\r\n        (filteredPosts.length > 0 ? filteredPosts : posts).map((post) => (\r\n          <PostCard post={post} key={post.id} />\r\n        ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n","// src/components/TagFilter.js\r\nimport React from \"react\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst TagFilter = ({\r\n  uniqueTags,\r\n  selectedTag,\r\n  handleTagClick,\r\n  handleClearFilter,\r\n  filteredPosts\r\n}) => {\r\n  return (\r\n    <Stack spacing={2} mb={3} direction=\"row\" flexWrap=\"wrap\">\r\n      {uniqueTags.map((tag) => (\r\n        <Button\r\n          key={tag}\r\n          variant={tag === selectedTag ? \"contained\" : \"outlined\"}\r\n          color=\"secondary\"\r\n          onClick={() => handleTagClick(tag)}\r\n          style={{\r\n            marginLeft: \"0px\",\r\n            marginInline: \"5px\",\r\n            marginBottom: \"8px\",\r\n          }}\r\n        >\r\n          {tag}\r\n        </Button>\r\n      ))}\r\n      {filteredPosts.length > 0 && (\r\n        <Button variant=\"contained\" color=\"inherit\" onClick={handleClearFilter}>\r\n          Limpiar\r\n        </Button>\r\n      )}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default TagFilter;\r\n","// src/components/PostContainer.js\r\nimport React from \"react\";\r\nimport { usePosts } from \"../../hooks/usePosts\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Iconify from \"../../helpers/iconify/iconify\";\r\nimport PostList from \"./PostList\";\r\nimport TagFilter from \"./../TagFilter/TagFilter\";\r\n\r\nconst PostContainer = () => {\r\n  const {\r\n    posts,\r\n    postsStatus,\r\n    useServer,\r\n    selectedTag,\r\n    uniqueTags,\r\n    filteredPosts,\r\n    handleTagClick,\r\n    handleClearFilter,\r\n    toggleDataSource,\r\n  } = usePosts();\r\n\r\n\r\n  return (\r\n    <Container>\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-between\"\r\n        mb={5}\r\n      >\r\n        <Typography variant=\"h4\">Posts</Typography>\r\n        {(postsStatus !== \"loading\" || postsStatus === \"connected\") && (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"inherit\"\r\n            startIcon={<Iconify icon=\"eva:plus-fill\" />}\r\n            onClick={toggleDataSource}\r\n          >\r\n            {useServer ? \"Switch to External API\" : \"Switch to Server\"}\r\n          </Button>\r\n        )}\r\n      </Stack>\r\n\r\n      {(postsStatus === \"succeeded\" || postsStatus === \"connected\") &&\r\n        posts.length > 0 && (\r\n          <TagFilter\r\n            uniqueTags={uniqueTags}\r\n            selectedTag={selectedTag}\r\n            filteredPosts={filteredPosts}\r\n            handleTagClick={handleTagClick}\r\n            handleClearFilter={handleClearFilter}\r\n          />\r\n        )}\r\n\r\n      <PostList\r\n        posts={posts}\r\n        postsStatus={postsStatus}\r\n        filteredPosts={filteredPosts}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PostContainer;\r\n","import { useEffect, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  fetchPosts,\r\n  subscribeToPosts,\r\n  setUseServer,\r\n  selectAllPosts,\r\n  selectPostsStatus,\r\n  selectUseServer,\r\n  setTagFilter,\r\n  clearFilter,\r\n  selectGetTags,\r\n  selectPostTag,\r\n  selectPostsFilter,\r\n} from \"../features/postsSlice\";\r\nimport socket from \"../api/socket.js\";\r\n\r\nexport const usePosts = () => {\r\n  const dispatch = useDispatch();\r\n  const posts = useSelector(selectAllPosts);\r\n  const postsStatus = useSelector(selectPostsStatus);\r\n  const useServer = useSelector(selectUseServer);\r\n  const selectedTag = useSelector(selectPostTag);\r\n  const uniqueTags = useSelector(selectGetTags);\r\n  const filteredPosts = useSelector(selectPostsFilter);\r\n\r\n  const toggleDataSource = useCallback(() => {\r\n    dispatch(setUseServer(!useServer));\r\n    dispatch(fetchPosts());\r\n  }, [dispatch, useServer]);\r\n\r\n  useEffect(() => {\r\n    const handleConnect = () => {\r\n      console.log(\"Socket connected.\");\r\n      socket.emit(\"getPosts\");\r\n    };\r\n\r\n    const handleDisconnect = () => {\r\n      console.log(\"Socket disconnected.\");\r\n      toggleDataSource();\r\n    };\r\n\r\n    // Suscribirse a eventos de conexión y desconexión\r\n    socket.on(\"connect\", handleConnect);\r\n    socket.on(\"disconnect\", handleDisconnect);\r\n\r\n    if (socket.connected) {\r\n      handleConnect();\r\n    }\r\n\r\n    // Suscribirse a los posts y cargarlos si es necesario\r\n    dispatch(subscribeToPosts());\r\n\r\n    if (postsStatus === \"idle\" || postsStatus === \"disconnected\") {\r\n      dispatch(fetchPosts());\r\n    }\r\n\r\n    return () => {\r\n      socket.off(\"connect\", handleConnect);\r\n      socket.off(\"disconnect\", handleDisconnect);\r\n      socket.off(\"posts\");\r\n    };\r\n  }, [dispatch, postsStatus, useServer, toggleDataSource]);\r\n\r\n  const handleTagClick = (tag) => {\r\n    dispatch(setTagFilter(tag));\r\n  };\r\n\r\n  const handleClearFilter = () => {\r\n    dispatch(clearFilter());\r\n  };\r\n\r\n  return {\r\n    posts,\r\n    postsStatus,\r\n    useServer,\r\n    selectedTag,\r\n    uniqueTags,\r\n    filteredPosts,\r\n    toggleDataSource,\r\n    handleTagClick,\r\n    handleClearFilter,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport PostContainer from \"../components/Posts/PostContainer\";\r\nimport { Grid } from \"@mui/material\";\r\n\r\nconst HomePage = () => {\r\n\r\n  return (\r\n    <>\r\n      <Grid container direction=\"column\" spacing={2}>\r\n\r\n        <Grid item>\r\n          <PostContainer />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"names":["Iconify","forwardRef","_ref","ref","icon","width","sx","other","_jsx","Box","component","Icon","className","height","propTypes","PropTypes","fDate","date","newFormat","fm","format","Date","result","key","arguments","length","undefined","includes","replace","SvgColor","src","display","bgcolor","mask","concat","WebkitMask","comments","status","CircularProgress","Typography","variant","children","_Fragment","map","comment","index","_jsxs","ListItem","alignItems","ListItemAvatar","Avatar","alt","owner","picture","ListItemText","primary","firstName","secondary","React","color","message","publishDate","Divider","style","position","top","left","transform","border","boxShadow","p","isOpen","onClose","postId","useComments","dispatch","useDispatch","useSelector","state","selectCommentsByPostId","selectCommentsStatusByPostId","loadedComments","setLoadedComments","useState","useEffect","fetchCommentsByPostId","Modal","open","List","CommentList","PostCard","post","id","image","text","likes","modalOpen","setModalOpen","toggleModal","renderAvatar","bottom","theme","spacing","zIndex","renderCover","objectFit","renderTitle","Link","underline","overflow","WebkitLineClamp","WebkitBoxOrient","typography","renderInfo","Stack","direction","justifyContent","flexWrap","mt","opacity","onClick","cursor","mr","number","numeral","renderName","mb","renderShape","Grid","item","xs","sm","md","Card","content","alpha","palette","grey","pt","CommentModal","posts","postsStatus","filteredPosts","container","uniqueTags","selectedTag","handleTagClick","handleClearFilter","tag","Button","marginLeft","marginInline","marginBottom","PostContainer","useServer","toggleDataSource","usePosts","selectAllPosts","selectPostsStatus","selectUseServer","selectPostTag","selectGetTags","selectPostsFilter","useCallback","setUseServer","fetchPosts","handleConnect","console","log","socket","emit","handleDisconnect","on","connected","subscribeToPosts","off","setTagFilter","clearFilter","Container","startIcon","TagFilter","PostList","HomePage"],"sourceRoot":""}