{"version":3,"file":"static/js/955.d9fec55e.chunk.js","mappings":"8KAQA,MAAMA,GAAUC,EAAAA,EAAAA,aAAW,CAAAC,EAAqCC,KAAG,IAAvC,KAAEC,EAAI,MAAEC,EAAQ,GAAE,GAAEC,KAAOC,GAAOL,EAAA,OAC5DM,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACFN,IAAKA,EACLO,UAAWC,EAAAA,GACXC,UAAU,oBACVR,KAAMA,EACNE,GAAI,CAAED,QAAOQ,OAAQR,KAAUC,MAC3BC,GACJ,IAGJP,EAAQc,UAAY,CAClBV,KAAMW,IAAAA,UAAoB,CAACA,IAAAA,QAAmBA,IAAAA,SAC9CT,GAAIS,IAAAA,OACJV,MAAOU,IAAAA,QAGT,S,wKCjBA,MA4DA,EA5DoBC,KAClB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAkBC,EAAAA,EAAAA,IAAYC,EAAAA,IAC9BC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAkBjB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,UAAU,MAAMC,eAAe,WAAUC,SAAA,CAC7CX,GAAyC,WAAtBK,EAASO,WAC3BvB,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACuB,QAAQ,OAAOC,GAAI,EAAGC,GAAI,EAAEJ,UAC/BtB,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CACLC,QAAQ,YACRC,MAAM,UACNC,QAfeC,KACvBjB,EAAS,SAAS,EAciBQ,SAC5B,YAKJX,GAAyC,WAAtBK,EAASO,WAC3BvB,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACuB,QAAQ,OAAOC,GAAI,EAAGC,GAAI,EAAEJ,UAC/BtB,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CACLC,QAAQ,YACRC,MAAM,UACNC,QAtBeE,KACvBlB,EAAS,SAAS,EAqBiBQ,SAC5B,aAKLtB,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACuB,QAAQ,OAAOC,GAAI,EAAGC,GAAI,EAAEJ,UAC/BtB,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CACLC,QAAQ,YACRC,MAAM,UACNI,WAAWjC,EAAAA,EAAAA,KAACR,EAAAA,EAAO,CAACI,KAAK,mBACzBkC,QA7CiBI,UAClBvB,EAGHF,GAAS0B,EAAAA,EAAAA,QAFTC,EAAAA,EAAAA,IAGF,EAwCgCd,SAEzBX,EAAkB,SAAW,eAG5B,ECxCZ,EAlBmB0B,KAEfnB,EAAAA,EAAAA,MAAAoB,EAAAA,SAAA,CAAAhB,SAAA,EACEtB,EAAAA,EAAAA,KAACuC,EAAAA,GAAM,CAAAjB,UACLtB,EAAAA,EAAAA,KAAA,SAAAsB,SAAO,cAETJ,EAAAA,EAAAA,MAACsB,EAAAA,GAAI,CAACC,WAAS,EAACrB,UAAU,SAASsB,QAAS,EAAEpB,SAAA,EAC9CtB,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAACG,MAAI,EAAArB,UACNtB,EAAAA,EAAAA,KAACQ,EAAW,OAEdR,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAACG,MAAI,EAAArB,UACRtB,EAAAA,EAAAA,KAAC4C,EAAAA,GAAM,W","sources":["helpers/iconify/iconify.jsx","components/Login/LoginButton.jsx","pages/LayoutPage.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport { forwardRef } from 'react';\r\nimport { Icon } from '@iconify/react';\r\n\r\nimport Box from '@mui/material/Box';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst Iconify = forwardRef(({ icon, width = 20, sx, ...other }, ref) => (\r\n  <Box\r\n    ref={ref}\r\n    component={Icon}\r\n    className=\"component-iconify\"\r\n    icon={icon}\r\n    sx={{ width, height: width, ...sx }}\r\n    {...other}\r\n  />\r\n));\r\n\r\nIconify.propTypes = {\r\n  icon: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\r\n  sx: PropTypes.object,\r\n  width: PropTypes.number,\r\n};\r\n\r\nexport default Iconify;","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loginWithGoogle } from \"../../api/api\";\r\nimport { logout, selectIsAuthenticated } from \"../../features/authSlice\";\r\nimport { Box, Button, Stack } from \"@mui/material\";\r\nimport Iconify from \"../../helpers/iconify/iconify\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\n\r\nconst LoginButton = () => {\r\n  const dispatch = useDispatch();\r\n  const isAuthenticated = useSelector(selectIsAuthenticated);\r\n  const navigate = useNavigate(); // Hook para la navegaciÃ³n\r\n  const location = useLocation(); // Hook para obtener la ruta actual\r\n\r\n  const handleLoginClick = async () => {\r\n    if (!isAuthenticated) {\r\n      loginWithGoogle();\r\n    } else {\r\n      dispatch(logout());\r\n    }\r\n  };\r\n\r\n  const handleUsersClick = () => {\r\n    navigate(\"/users\"); // Navega hacia la ruta '/users'\r\n  };\r\n\r\n  const handlePostsClick = () => {\r\n    navigate(\"/posts\"); // Navega hacia la ruta '/posts'\r\n  };\r\n\r\n  return (\r\n    <Stack direction=\"row\" justifyContent=\"flex-end\">\r\n      {isAuthenticated && location.pathname !== \"/users\" && (\r\n        <Box display=\"flex\" mt={2} mr={2}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"inherit\"\r\n            onClick={handleUsersClick} // Llama a handleUsersClick al hacer clic\r\n          >\r\n            Users\r\n          </Button>\r\n        </Box>\r\n      )}\r\n      {isAuthenticated && location.pathname === \"/users\" && (\r\n        <Box display=\"flex\" mt={2} mr={2}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"inherit\"\r\n            onClick={handlePostsClick} // Llama a handlePostsClick al hacer clic\r\n          >\r\n            Posts\r\n          </Button>\r\n        </Box>\r\n      )}\r\n      <Box display=\"flex\" mt={2} mr={2}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"inherit\"\r\n          startIcon={<Iconify icon=\"devicon:google\" />}\r\n          onClick={handleLoginClick}\r\n        >\r\n          {isAuthenticated ? \"Logout\" : \"SignIn\"}\r\n        </Button>\r\n      </Box>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default LoginButton;\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { Grid } from \"@mui/material\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport LoginButton from \"../components/Login/LoginButton\";\r\n\r\nconst LayoutPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Webapp</title>\r\n      </Helmet>\r\n      <Grid container direction=\"column\" spacing={2}>\r\n      <Grid item>\r\n          <LoginButton />\r\n        </Grid>\r\n        <Grid item>\r\n          <Outlet />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LayoutPage;\r\n"],"names":["Iconify","forwardRef","_ref","ref","icon","width","sx","other","_jsx","Box","component","Icon","className","height","propTypes","PropTypes","LoginButton","dispatch","useDispatch","isAuthenticated","useSelector","selectIsAuthenticated","navigate","useNavigate","location","useLocation","_jsxs","Stack","direction","justifyContent","children","pathname","display","mt","mr","Button","variant","color","onClick","handleUsersClick","handlePostsClick","startIcon","async","logout","loginWithGoogle","LayoutPage","_Fragment","Helmet","Grid","container","spacing","item","Outlet"],"sourceRoot":""}